package ui

import "github.com/troygilman/gong"

type MenuComponent struct {
	props []MenuGroupProps
}

func NewMenuComponent(props []MenuGroupProps) gong.Component {
	return gong.NewComponent(MenuComponent{
		props: props,
	})
}

templ (c MenuComponent) View() {
	@gong.NewTarget() {
		@Menu(c.props)
	}
}

templ (c MenuComponent) Action() {
	@Menu(c.props)
}

templ Menu(props []MenuGroupProps) {
	{{
		path := gong.ChildRoute(ctx).FullPath()
	}}
	<ul class="menu rounded-box w-full text-scale">
		for _, group := range props {
			@MenuGroup(group, path)
		}
	</ul>
}

templ MenuGroup(props MenuGroupProps, path string) {
	<li>
		<details open>
			<summary class="text-nowrap">{ props.Label }</summary>
			<ul>
				for _, item := range props.Items {
					@MenuItem(item, item.Link == path)
				}
			</ul>
		</details>
	</li>
}

templ MenuItem(props MenuItemProps, active bool) {
	@gong.NewLink(props.Link).WithSwap(gong.SwapInnerHTML) {
		<li>
			<a class={ templ.KV("menu-active", active) }>
				{ props.Label }
			</a>
		</li>
	}
}

type MenuGroupProps struct {
	Label string
	Items []MenuItemProps
}

type MenuItemProps struct {
	Label string
	Link  string
}
