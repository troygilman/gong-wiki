package ui

import "github.com/troygilman/gong"

type RootView struct {
	Menu gong.Component
}

templ (view RootView) Head() {
	<head>
		<meta charset="utf-8"/>
		<title>Gong</title>
		<link href="/public/index.css" rel="stylesheet"/>
		<link rel="icon" type="image/png" href="/public/icon.png"/>
		<link id="prism-stylesheet" href="/public/prism-dark.css" rel="stylesheet"/>
		<script src="https://unpkg.com/htmx.org@2.0.4" integrity="sha384-HGfztofotfshcF7+8n44JQL2oJmowVChPTg48S+jvZoztPfvwD79OC/LTtG6dMp+" crossorigin="anonymous"></script>
		<script src="/public/prism.js" data-manual></script>
	</head>
}

templ (view RootView) View() {
	@initScript()
	<div class="flex justify-center w-full h-full">
		<div class="drawer lg:drawer-open w-fit h-full bg-base-100" x-data>
			<input id="my-drawer" type="checkbox" class="drawer-toggle"/>
			@view.drawerSide()
			@drawerContent()
		</div>
	</div>
}

templ (view RootView) drawerSide() {
	<div class="drawer-side z-50">
		<label for="my-drawer" aria-label="close sidebar" class="drawer-overlay"></label>
		<div class="bg-base-100 min-h-screen min-w-64 max-w-64">
			@view.Menu
		</div>
	</div>
}

templ drawerContent() {
	<div class="drawer-content overflow-y-hidden">
		<div class="flex flex-col w-full h-full">
			<div class="navbar flex justify-between">
				<div>
					<label for="my-drawer" class="btn btn-square btn-ghost btn-icon-scale p-1 drawer-button lg:hidden">
						@sidebarIcon("inline-block w-full h-full fill-current")
					</label>
				</div>
				<div class="flex gap-4">
					@themeController()
					<a class="btn btn-square btn-ghost btn-icon-scale p-1" href="https://github.com/troygilman/gong">
						@githubIcon("inline-block w-full h-full fill-current")
					</a>
				</div>
			</div>
			<div id="outlet-container" class="flex grow w-full max-w-full min-h-0 justify-center">
				@gong.NewOutlet().WithAttrs(templ.Attributes{"class": "w-full h-full"})
			</div>
		</div>
	</div>
}

templ themeController() {
	<label class="swap swap-rotate btn btn-square btn-ghost btn-icon-scale">
		<input
			id="theme-input"
			type="checkbox"
			class="theme-controller"
			value="light"
			hx-on:click="setIsLight(this.checked)"
		/>
		@sunIcon("swap-off w-full h-full fill-current")
		@moonIcon("swap-on w-full h-full fill-current")
		<script>
			function setIsLight(isLight) {
			    htmx.find("#theme-input").checked = isLight;
				htmx.find("#prism-stylesheet").href = isLight ? "/public/prism-light.css" : "/public/prism-dark.css";
				localStorage.setItem('isLight', JSON.stringify(isLight));
			}
			setIsLight(JSON.parse(localStorage.getItem('isLight')));
		</script>
	</label>
}

templ initScript() {
	<script>
	let addCopyButtons = () => {
        // Add copy buttons to code blocks
        document.querySelectorAll('.code-container').forEach(block => {
            // Create the copy button
            const button = document.createElement('button');
            button.className = 'copy-button';
            button.innerHTML = 'Copy';

            // Add button to the code block
            block.appendChild(button);

            button.addEventListener('click', async () => {
                const code = block.querySelector('code');
                try {
                    await navigator.clipboard.writeText(code.innerText);
                    button.innerHTML = 'Copied!';
                    setTimeout(() => {
                        button.innerHTML = 'Copy';
                    }, 1000);
                } catch (err) {
                    console.error('Failed to copy: ', err);
                }
            });
        });
	}
	document.addEventListener('DOMContentLoaded', function() {
        Prism.highlightAll();
        addCopyButtons();
    });
    document.body.addEventListener('htmx:afterSwap', function(event) {
        Prism.highlightAllUnder(event.detail.target);
        addCopyButtons();
        document.getElementById("outlet-container").scrollTop = 0;
    });
    document.body.addEventListener('htmx:oobAfterSwap', function(event) {
        Prism.highlightAllUnder(document.body);
        addCopyButtons();
        document.getElementById("outlet-container").scrollTop = 0;
    });
    </script>
}
