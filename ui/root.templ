package ui

import "github.com/troygilman/gong"

type RootView struct{}

templ (view RootView) Head() {
	<head>
		<meta charset="utf-8"/>
		<title>Gong</title>
		<html data-theme="light"></html>
		<script src="https://unpkg.com/htmx.org@2.0.4" integrity="sha384-HGfztofotfshcF7+8n44JQL2oJmowVChPTg48S+jvZoztPfvwD79OC/LTtG6dMp+" crossorigin="anonymous"></script>
		<link href="/public/index.css" rel="stylesheet"/>
		<link rel="icon" type="image/x-icon" href="/public/icon.png"/>
		<script defer src="https://cdn.jsdelivr.net/npm/alpinejs@3.x.x/dist/cdn.min.js"></script>
		<link href="https://cdnjs.cloudflare.com/ajax/libs/prism/1.24.1/themes/prism.min.css" rel="stylesheet"/>
		<script src="https://cdnjs.cloudflare.com/ajax/libs/prism/1.24.1/prism.min.js" data-manual></script>
		<script src="https://cdnjs.cloudflare.com/ajax/libs/prism/1.24.1/components/prism-go.min.js"></script>
	</head>
}

templ (view RootView) View() {
	@initScript()
	<div class="flex flex-col h-full bg-base-100" x-data>
		<div class="drawer lg:drawer-open flex grow flex-row min-h-0">
			<input id="my-drawer" type="checkbox" class="drawer-toggle"/>
			@drawerSide()
			@drawerContent()
		</div>
	</div>
}

templ drawerSide() {
	<div class="drawer-side z-50">
		<label for="my-drawer" aria-label="close sidebar" class="drawer-overlay"></label>
		<div class="flex flex-col h-full bg-base-100">
			<div class="navbar px-4">
				@gong.NewLink("/") {
					<div class="flex flex-row place-items-center gap-2 cursor-pointer">
						<image src="/public/icon.png" class="size-12"></image>
						<div class="text-2xl font-bold">Gong</div>
					</div>
				}
			</div>
			@Menu()
		</div>
	</div>
}

templ drawerContent() {
	<div class="drawer-content flex flex-col h-full w-full">
		<div class="navbar flex justify-between">
			<div>
				<label for="my-drawer" class="btn btn-ghost drawer-button lg:hidden">
					Open drawer
				</label>
			</div>
			<a class="btn btn-ghost" href="https://github.com/troygilman/gong">
				@githubIcon("inline-block w-6 h-6")
			</a>
		</div>
		<div id="outlet-container" class="flex grow w-full min-h-0 overflow-y-scroll justify-center">
			@gong.NewOutlet().WithClass("w-full h-full")
		</div>
	</div>
}

templ initScript() {
	<script>
	let addCopyButtons = () => {
        // Add copy buttons to code blocks
        document.querySelectorAll('pre').forEach(block => {
            // Create the copy button
            const button = document.createElement('button');
            button.className = 'copy-button';
            button.innerHTML = 'Copy';

            // Add button to the code block
            block.appendChild(button);

            button.addEventListener('click', async () => {
                const code = block.querySelector('code');
                try {
                    await navigator.clipboard.writeText(code.innerText);
                    button.innerHTML = 'Copied!';
                    setTimeout(() => {
                        button.innerHTML = 'Copy';
                    }, 1000);
                } catch (err) {
                    console.error('Failed to copy: ', err);
                }
            });
        });
	}
	document.addEventListener('DOMContentLoaded', function() {
        Prism.highlightAll();
        addCopyButtons();
    });
    document.body.addEventListener('htmx:afterSwap', function(event) {
        Prism.highlightAllUnder(event.detail.target);
        addCopyButtons();
        document.getElementById("outlet-container").scrollTop = 0;
    });
    </script>
}
